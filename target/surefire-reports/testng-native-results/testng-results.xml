<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-28T19:29:52 MSK" name="Surefire suite" finished-at="2025-10-28T19:29:52 MSK" duration-ms="55">
    <groups>
    </groups>
    <test started-at="2025-10-28T19:29:52 MSK" name="Surefire test" finished-at="2025-10-28T19:29:52 MSK" duration-ms="55">
      <class name="EvenOddCheckerTestNGTest">
        <test-method signature="evenNumTest()[pri:0, instance:EvenOddCheckerTestNGTest@43ee72e6]" started-at="2025-10-28T19:29:52 MSK" name="evenNumTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- evenNumTest -->
        <test-method signature="oddNumTest()[pri:0, instance:EvenOddCheckerTestNGTest@43ee72e6]" started-at="2025-10-28T19:29:52 MSK" name="oddNumTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oddNumTest -->
      </class> <!-- EvenOddCheckerTestNGTest -->
      <class name="RectangleTestNGTest">
        <test-method signature="constructorAndGetLengthTest()[pri:0, instance:RectangleTestNGTest@23529fee]" started-at="2025-10-28T19:29:52 MSK" name="constructorAndGetLengthTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorAndGetLengthTest -->
        <test-method signature="constructorAndGetWidthTest()[pri:0, instance:RectangleTestNGTest@23529fee]" started-at="2025-10-28T19:29:52 MSK" name="constructorAndGetWidthTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorAndGetWidthTest -->
        <test-method signature="getAreaTest()[pri:0, instance:RectangleTestNGTest@23529fee]" started-at="2025-10-28T19:29:52 MSK" name="getAreaTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAreaTest -->
        <test-method signature="setWidthAndGetWidthTest()[pri:0, instance:RectangleTestNGTest@23529fee]" started-at="2025-10-28T19:29:52 MSK" name="setWidthAndGetWidthTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setWidthAndGetWidthTest -->
        <test-method signature="setLengthAndGetLengthTest()[pri:0, instance:RectangleTestNGTest@23529fee]" started-at="2025-10-28T19:29:52 MSK" name="setLengthAndGetLengthTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLengthAndGetLengthTest -->
      </class> <!-- RectangleTestNGTest -->
      <class name="CalculatorTestNGTest">
        <test-method signature="additionTest()[pri:0, instance:CalculatorTestNGTest@4c15e7fd]" started-at="2025-10-28T19:29:52 MSK" name="additionTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- additionTest -->
        <test-method signature="divisionByZeroTest()[pri:0, instance:CalculatorTestNGTest@4c15e7fd]" started-at="2025-10-28T19:29:52 MSK" name="divisionByZeroTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at Calculator.divide(Calculator.java:16)
at CalculatorTestNGTest.divisionByZeroTest(CalculatorTestNGTest.java:30)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionByZeroTest -->
        <test-method signature="divisionTest()[pri:0, instance:CalculatorTestNGTest@4c15e7fd]" started-at="2025-10-28T19:29:52 MSK" name="divisionTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionTest -->
        <test-method signature="multiplicationTest()[pri:0, instance:CalculatorTestNGTest@4c15e7fd]" started-at="2025-10-28T19:29:52 MSK" name="multiplicationTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplicationTest -->
        <test-method signature="substructionTest()[pri:0, instance:CalculatorTestNGTest@4c15e7fd]" started-at="2025-10-28T19:29:52 MSK" name="substructionTest" finished-at="2025-10-28T19:29:52 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substructionTest -->
      </class> <!-- CalculatorTestNGTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
